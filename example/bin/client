#!/usr/bin/env babel-node
/* eslint-disable no-console */
// @flow
const createIOClient = require( 'socket.io-client' );
const program = require( 'commander' );

program
	.option( '-u, --user <id>', 'user id' )
	.option( '-n, --num-clients <count>', 'number of clients to run', 1 )
	.parse( process.argv );

const runClient = ( userId ) => {
	const client = createIOClient( 'http://localhost:3003/users' );

	client.on( 'user', callback => {
		console.log( 'user requested' );
		callback( { id: userId } );
	} );

	client.on( 'auth', callback => {
		console.log( 'authing' );
		callback( { id: program.user } );
	} );

	setInterval( () => {
		client.emit( 'dispatch', { type: 'INCREMENT', amount: 5 } );
	}, 1000 );

	client.on( 'api.state', ( state ) => {
		console.log( 'received state', state );
	} );

	client.on( 'effect', ( ts ) => {
		console.log( 'got an effect', ts );
	} );

	client.on( 'connect', () => {
		console.log( 'connected' );
	} );
	client.on( 'disconnect', () => {
		console.log( 'disconnect' );
	} );
};

for( let i = program.numClients; i > 0; i--) {
	runClient( program.user );
}